// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Co2CalculatorWebAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230925203711_InputUpdateNew")]
    partial class InputUpdateNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Entities.Models.Culture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("CultureId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cultures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Name = "Corn"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Name = "Wheat"
                        },
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Name = "Ray"
                        });
                });

            modelBuilder.Entity("Entities.Models.CultureInput", b =>
                {
                    b.Property<Guid>("CultureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("InputId")
                        .HasColumnType("char(36)");

                    b.HasKey("CultureId", "InputId");

                    b.HasIndex("InputId");

                    b.ToTable("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("InputId");

                    b.Property<decimal>("Co2EqPerKgCoefficient")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("InputTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InputTypeId");

                    b.ToTable("Inputs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30675453-f7be-4cdf-b53c-69673e3e2628"),
                            Co2EqPerKgCoefficient = 9.78m,
                            InputTypeId = new Guid("4d80714f-8bda-4e8b-82cd-af9c5be709ec"),
                            Name = "NitrogenFertilizer"
                        },
                        new
                        {
                            Id = new Guid("87ba49a5-65c6-4633-838b-e942341250ab"),
                            Co2EqPerKgCoefficient = 0.73m,
                            InputTypeId = new Guid("4d80714f-8bda-4e8b-82cd-af9c5be709ec"),
                            Name = "Urea"
                        },
                        new
                        {
                            Id = new Guid("23fbc9cd-eb1b-4eac-9f1d-dfd74cf5b71d"),
                            Co2EqPerKgCoefficient = 0.16m,
                            InputTypeId = new Guid("4d80714f-8bda-4e8b-82cd-af9c5be709ec"),
                            Name = "KaliumFertilizer"
                        },
                        new
                        {
                            Id = new Guid("59e8d239-d198-4fe5-8407-325968fbef36"),
                            Co2EqPerKgCoefficient = 4.5m,
                            InputTypeId = new Guid("4d80714f-8bda-4e8b-82cd-af9c5be709ec"),
                            Name = "PhosphorusFertilizer"
                        });
                });

            modelBuilder.Entity("Entities.Models.InputType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("InputTypeId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InputType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c904cca1-4c6c-4bd9-98a9-139ea5d05b5f"),
                            Name = "Soil"
                        },
                        new
                        {
                            Id = new Guid("294f7163-81e9-4ef1-a13c-307e493ead41"),
                            Name = "Fuel"
                        },
                        new
                        {
                            Id = new Guid("e2d0ce72-0ab6-459d-b727-1976d7f6e938"),
                            Name = "Pesticide"
                        },
                        new
                        {
                            Id = new Guid("d619ad71-0ada-410a-a4b4-51d231cd2407"),
                            Name = "Fertilizer"
                        });
                });

            modelBuilder.Entity("Entities.Models.CultureInput", b =>
                {
                    b.HasOne("Entities.Models.Culture", "Culture")
                        .WithMany("CultureInputs")
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Input", "Input")
                        .WithMany("CultureInputs")
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Input");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.HasOne("Entities.Models.InputType", "InputType")
                        .WithMany("Inputs")
                        .HasForeignKey("InputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InputType");
                });

            modelBuilder.Entity("Entities.Models.Culture", b =>
                {
                    b.Navigation("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.Navigation("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.InputType", b =>
                {
                    b.Navigation("Inputs");
                });
#pragma warning restore 612, 618
        }
    }
}
