// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Co2CalculatorWebAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230921210952_LastChangeInputType")]
    partial class LastChangeInputType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Entities.Models.Culture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("CultureId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cultures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Name = "Corn"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Name = "Wheat"
                        },
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Name = "Ray"
                        });
                });

            modelBuilder.Entity("Entities.Models.CultureInput", b =>
                {
                    b.Property<Guid>("CultureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("InputId")
                        .HasColumnType("char(36)");

                    b.HasKey("CultureId", "InputId");

                    b.HasIndex("InputId");

                    b.ToTable("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("InputId");

                    b.Property<decimal>("Co2EqPerKgAppliance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Co2EqPerKgProduction")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Co2EqPerUnit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("InputTypeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("InputTypeId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("Entities.Models.InputType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("InputTypeId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InputType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcfc373e-9153-42f9-9722-ee5026e92146"),
                            Name = "Soil"
                        },
                        new
                        {
                            Id = new Guid("7598708d-e196-4380-9d95-ba139a6f12c6"),
                            Name = "Fuel"
                        },
                        new
                        {
                            Id = new Guid("d8c2cc2d-4c39-4295-a95c-7ba18175c0b2"),
                            Name = "Pesticide"
                        },
                        new
                        {
                            Id = new Guid("7a5d6cf9-705d-463b-901e-fd1e30284154"),
                            Name = "Fertilizer"
                        });
                });

            modelBuilder.Entity("Entities.Models.CultureInput", b =>
                {
                    b.HasOne("Entities.Models.Culture", "Culture")
                        .WithMany("CultureInputs")
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Input", "Input")
                        .WithMany("CultureInputs")
                        .HasForeignKey("InputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Input");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.HasOne("Entities.Models.InputType", "InputType")
                        .WithMany("Inputs")
                        .HasForeignKey("InputTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InputType");
                });

            modelBuilder.Entity("Entities.Models.Culture", b =>
                {
                    b.Navigation("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.Input", b =>
                {
                    b.Navigation("CultureInputs");
                });

            modelBuilder.Entity("Entities.Models.InputType", b =>
                {
                    b.Navigation("Inputs");
                });
#pragma warning restore 612, 618
        }
    }
}
